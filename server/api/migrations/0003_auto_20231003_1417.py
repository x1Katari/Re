from django.contrib.auth.models import User
from django.db import migrations
from random import randint

from django.utils import timezone

tags = [
    'Боевик',
    'Фантастика',
    'Боги',
    'Магия',
    'Мечи',
    'ГГ умный',
    'ГГ мужчина',
    'Перерождение',
    'Современность',
    'Суперсила',
    'Стратегия',
]

titles = [
    {
        "rus_name": "Начало после конца",
        "en_name": "The Beginning After the End",
        "alt_name": "The Beginning After the End (Novel)",
        "description": "Король Грей обладает непревзойденной силой, богатством и престижем в мире, управляемом боевыми способностями. Однако одиночество задерживается близко за теми, кто обладает большой властью. Под гламурной внешностью могущественного короля скрывается оболочка человека, лишенная цели и воли.Перевоплотившись в новый мир, наполненный магией и монстрами, король получил второй шанс пережить свою жизнь заново. Однако исправление ошибок прошлого будет не единственной его задачей. За миром и процветанием нового мира скрывается скрытая угроза, способная уничтожить все, ради чего он работал.",
        "count_view": 0,
        "count_like": 0,
    },
    {
        "rus_name": "Поднятие уровня в одиночку: Рагнарёк",
        "en_name": "Level Up Alone: Ragnarok",
        "alt_name": "나 혼자만 레벨업 : 라그나로크",
        "description": "Сон Су Хо, что ранее был самым обычным студентом колледжа, перед лицом смерти пробуждает особые способности, полученные в наследство.— Пробудись!Охотник бросает вызов смерти и воцаряется на вершине её власти... Следите за его новым повышением уровня!",
        "count_view": 0,
        "count_like": 0,
    },
    {
        "rus_name": "Выживание в игре за Варвара",
        "en_name": "Surviving The Game as a Barbarian",
        "alt_name": "게임 속 바바리안으로 살아남기",
        "description": "Я не мог пройти эту игру даже в 2D, а теперь мне проходить её в реальности? Возможно, мне придется прожить здесь всю оставшуюся жизнь. Но даже это будет нелегко. Главный герой Ли Хан Су наконец-то достиг комнаты финального босса после 9 лет игры в «Dungeon&Stone». Но стоило ему войти, как появилось уведомление о завершении обучения, после чего он обнаруживает себя в мире игры «Dungeon&Stone» в обличии дикого варвара. Чтобы сохранить свой секрет в тайне, он будет вынужден носить маску — стать для окружающих более бесстрашным и беспощадным, чем был кто-либо до него — эталоном своей расы в глазах всего мира. Тем временем в нашем мире, в пустой темной комнате, вновь зашумел безмолвный компьютер. На черном же экране начал появляться текст. [Синхронизация завершена] Вы находитесь на странице новеллы Выживание в игре за Варвара/ Surviving The Game as a Barbarian. Относится к жанрам фэнтези,попаданцы,литрпг,боевик,реалрпг. Выпускается с 2021 года, статус новеллы - продолжается.",
        "count_view": 0,
        "count_like": 0,
    },
    {
        "rus_name": "Ничтожество из графского семейства",
        "en_name": "Trash of the Count's Family",
        "alt_name": "Я стал графским ублюдком",
        "description": "Я открыл глаза и понял, что очутился внутри новеллы «Рождение Героя». Это была новелла, посвященная приключениям Чхве Хана, мальчишки, ученика средней школы, который был перенесен в другое измерение с Земли и рожден, как один из многочисленных героев континента. Я стал частью этой новеллы, превратившись в отброса одного графского семейства. Эта семья контролировала территорию, где находилась первая деревня, которую посещает главный герой новеллы. Чхве Хан меняется после этой деревни, а после — все, кто в ней жил, уничтожаются ассасинами. Самая главная проблема заключается в том, что это глупое ничтожество, которым я стал, не знает о том, что произошло в деревне, и путается с Чхве Ханом, только для того, чтобы быть избитым до полусмерти. — ...Это станет проблемой. Я чувствовал, что со мной произойдет и нечто серьезнее. Но стоит попытаться сделать свою новую жизнь лучше. Вы находитесь на странице новеллы Ничтожество из графского семейства/ Trash of the Count's Family. Относится к жанрам фэнтези. Выпускается с 2017 года, статус новеллы - продолжается.",
        "count_view": 0,
        "count_like": 0,
    },
    {
        "rus_name": "Сефирот: Дестро",
        "en_name": "Sephiroth: Destro",
        "alt_name": "Сефирот",
        "description": "Они напали без предупреждения. Неизвестные науке чудовища убивали людей один за другим. Обычно у животных на регенерацию уходит много питательных веществ и времени, но они… мгновенно заживляли ранения от пуль. Прямо во время боя они эволюционировали и изучали наши слабости. Некоторые адаптировались даже к снарядам танков и прочему оружию массового поражения, которое было полностью бесполезно перед их возможностью клонировать себя. Поэтому человечество решилось на методы «термоядерного» уровня. Правда, судного дня оказалось недостаточно, ведь монстры смогли воскреснуть и после того, как от их тел не осталось простейшей капли крови. Из пустоты, мгновенно, они раз за разом восставали снова, из ничего. Однако самое страшное — это темпы их эволюции. Уже сейчас они становились разумнее людей. Неизвестно, это было единое сознание или нечто бессознательное, но оно управляло толпами чудовищ, переигрывая нас в нами же изобретённой стратегии. Спустя несколько дней спрятавшихся в подвалах разрушенных городов уже добивали кочующие монстры, именуемые «бродягами». Так вот, бывалый снайпер, одиноко сидящий на крыше одного из множества домов даёт тебе загадку… Кто победит? Бессмертные чудовища, способные мутировать и адаптироваться к любому виду урона, или... Человечество?",
        "count_view": 0,
        "count_like": 0,
    },
    {
        "rus_name": "Ошибка Выжившего",
        "en_name": "Survival Bias",
        "alt_name": "",
        "description": "Древо реальностей, давно затонувшее в океане чудовищ. Клочок бытия, что может окончательно исчезнуть в пучине бесконечности в любой момент. Мир давно прошёл через ту границу, когда можно было ещё что-то исправить. Всплывать уже некуда, и ты, тот, кто побывал за пределами иллюзорной суши, понимаешь это намного лучше, чем кто-либо ещё. Что делать? В твоём случае, брать удочку, Феликс, и надеяться на удачный улов. В крайнем случае, ты всегда можешь попробовать ещё раз. Столько раз, сколько потребуется. До тех пор, пока тебе не повезёт.",
        "count_view": 0,
        "count_like": 0,
    },
]


def dump_data(apps, schema_editor):
    superuser = User.objects.create_superuser(
        username='admin',
        password='admin',
        last_login=timezone.now(),
        is_superuser=True,
        is_staff=True
    )
    superuser.save()
    global tags, titles
    Title = apps.get_model('api', 'Title')
    Volume = apps.get_model('api', 'Volume')
    Chapter = apps.get_model('api', 'Chapter')
    Tag = apps.get_model('api', 'Tag')

    for tag in tags:
        Tag.objects.create(name=tag)

    tags = Tag.objects.all()
    for title in titles:
        title = Title.objects.create(
            rus_name=title.get('rus_name'),
            en_name=title.get('en_name'),
            alt_name=title.get('alt_name'),
            description=title.get('description'),
            count_view=title.get('count_view'),
            count_like=title.get('count_like'),
        )
        title.tags.add(*tags),
        title.save()
        for volume_number in range(1, 4):
            volume = Volume.objects.create(
                title=title,
                name='',
                number=volume_number,
                price=randint(1, 1000),
            )
            volume.save()
            for chapter_number in range(1, randint(10, 50)):
                chapter = Chapter.objects.create(
                    volume=volume,
                    number=chapter_number,
                    content=f'{title.rus_name}. Том {volume.number}. Глава {chapter_number}.\n' * randint(10, 50)
                )
                chapter.save()


class Migration(migrations.Migration):
    dependencies = [
        ('api', '0002_alter_chapter_options_remove_chapter_index_and_more'),
    ]

    operations = [
        migrations.RunPython(dump_data)
    ]
